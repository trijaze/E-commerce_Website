// üõí API gi·ªè h√†ng k·∫øt n·ªëi t·ªõi BE Tomcat
const BASE_URL = "http://localhost:8080/bachhoa/api/cart*";

// üîπ L·∫•y danh s√°ch s·∫£n ph·∫©m trong gi·ªè h√†ng (GET /api/cart?userId=1)
export async function getCartItems(userId: number = 1) {
  try {
    const res = await fetch(`${BASE_URL}?userId=${userId}`);
    if (!res.ok) throw new Error("Kh√¥ng th·ªÉ t·∫£i gi·ªè h√†ng");
    return await res.json();
  } catch (err) {
    console.error("‚ùå L·ªói khi l·∫•y gi·ªè h√†ng:", err);
    return [];
  }
}

// üîπ Th√™m s·∫£n ph·∫©m v√†o gi·ªè (POST /api/cart)
export async function addToCart(
  userId: number,
  productId: number,
  quantity: number = 1
) {
  try {
    const res = await fetch(BASE_URL, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ userId, variantId: productId, quantity }), // backend d√πng variantId
    });

    if (!res.ok) throw new Error("Kh√¥ng th·ªÉ th√™m s·∫£n ph·∫©m v√†o gi·ªè");
    return await res.json();
  } catch (err) {
    console.error("‚ùå L·ªói th√™m v√†o gi·ªè h√†ng:", err);
    return null;
  }
}

// üîπ C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m (PUT /api/cart)
export async function updateQuantity(id: number, quantity: number) {
  try {
    const res = await fetch(BASE_URL, {
      method: "PUT",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id, quantity }),
    });

    if (!res.ok) throw new Error("Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng");
    return await res.json();
  } catch (err) {
    console.error("‚ùå L·ªói c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng:", err);
    return null;
  }
}

// üîπ X√≥a 1 s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng (DELETE /api/cart?id=...)
export async function deleteCartItem(id: number) {
  try {
    const res = await fetch(`${BASE_URL}?id=${id}`, { method: "DELETE" });
    if (!res.ok) throw new Error("Kh√¥ng th·ªÉ x√≥a s·∫£n ph·∫©m");
    return await res.json();
  } catch (err) {
    console.error("‚ùå L·ªói x√≥a s·∫£n ph·∫©m:", err);
    return null;
  }
}

// üîπ X√≥a to√†n b·ªô gi·ªè h√†ng (DELETE /api/cart?userId=1)
export async function clearCart(userId: number = 1) {
  try {
    const res = await fetch(`${BASE_URL}?userId=${userId}`, { method: "DELETE" });
    if (!res.ok) throw new Error("Kh√¥ng th·ªÉ x√≥a to√†n b·ªô gi·ªè h√†ng");
    return await res.json();
  } catch (err) {
    console.error("‚ùå L·ªói clear gi·ªè h√†ng:", err);
    return null;
  }
}
