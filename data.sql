-- ==========================================
-- üì¶ B√ÅCH H√ìA ONLINE DATABASE
-- ==========================================
DROP DATABASE bachhoa;
CREATE DATABASE IF NOT EXISTS bachhoa CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE bachhoa;

-- =========================
-- 1Ô∏è‚É£ B·∫¢NG USERS
-- =========================
DROP TABLE IF EXISTS users;
CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100),
  email VARCHAR(150) UNIQUE,
  role ENUM('USER','ADMIN') DEFAULT 'USER',
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
INSERT INTO users (name, email, role) VALUES
('Alice', 'alice@test.com', 'USER'),
('Bob', 'bob@test.com', 'ADMIN');

-- =========================
-- 2Ô∏è‚É£ B·∫¢NG PRODUCTS
-- =========================


DROP TABLE IF EXISTS products;
CREATE TABLE products (
  productId INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  description TEXT,
  basePrice DECIMAL(10,2) NOT NULL,
  categoryId INT,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO products (name, description, basePrice, categoryId) VALUES
('T√°o ƒë·ªè Fuji', 'T√°o ƒë·ªè nh·∫≠p kh·∫©u gi√≤n ng·ªçt, h∆∞∆°ng v·ªã t∆∞∆°i m√°t.', 45000, 1),
('Cam M·ªπ Sunkist', 'Cam v√†ng M·ªπ ng·ªçt, m·ªçng n∆∞·ªõc v√† th∆°m.', 55000, 1),
('Chu·ªëi ti√™u', 'Chu·ªëi ti√™u s·∫°ch, th∆°m t·ª± nhi√™n, b·ªï d∆∞·ª°ng.', 25000, 2),
('D∆∞a h·∫•u kh√¥ng h·∫°t', 'D∆∞a h·∫•u ƒë·ªè ng·ªçt thanh, kh√¥ng h·∫°t.', 30000, 2);

-- =========================
-- 3Ô∏è‚É£ B·∫¢NG PRODUCT IMAGES
-- =========================

DROP TABLE IF EXISTS productimages;
CREATE TABLE productimages (
  imageId INT AUTO_INCREMENT PRIMARY KEY,
  productId INT NOT NULL,
  imageUrl VARCHAR(500),
  isMain BOOLEAN DEFAULT FALSE,
  FOREIGN KEY (productId) REFERENCES products(productId) ON DELETE CASCADE
);

INSERT INTO productimages (productId, imageUrl, isMain) VALUES
(1, 'https://cdn.tgdd.vn/Products/Images/8788/282550/bhx/tao-do-fuji-tui-1kg-202212271118435261.jpg', TRUE),
(2, 'https://cdn.tgdd.vn/Products/Images/8788/282545/bhx/cam-my-sunkist-tui-1kg-202212271122395153.jpg', TRUE),
(3, 'https://cdn.tgdd.vn/Products/Images/8788/282546/bhx/chuoi-tieu-1kg-202212271119235246.jpg', TRUE),
(4, 'https://cdn.tgdd.vn/Products/Images/8788/285046/bhx/dua-hau-khong-hat-1kg-20240102090905.jpg', TRUE);

-- =========================
-- 4Ô∏è‚É£ B·∫¢NG PRODUCT VARIANTS
-- =========================

DROP TABLE IF EXISTS productvariants;
CREATE TABLE productvariants (
  variantId INT AUTO_INCREMENT PRIMARY KEY,
  productId INT NOT NULL,
  attributes JSON,
  price DECIMAL(10,2),
  FOREIGN KEY (productId) REFERENCES products(productId) ON DELETE CASCADE
);

INSERT INTO productvariants (productId, attributes, price) VALUES
(1, '{"size":"1kg"}', 45000),
(1, '{"size":"2kg"}', 88000),
(2, '{"size":"1kg"}', 55000),
(3, '{"size":"1kg"}', 25000),
(4, '{"size":"1 qu·∫£ (2kg)"}', 60000);

-- =========================
-- 5Ô∏è‚É£ B·∫¢NG REVIEWS
-- =========================

DROP TABLE IF EXISTS reviews;
CREATE TABLE reviews (
  id INT AUTO_INCREMENT PRIMARY KEY,
  product_id INT NOT NULL,
  user_id INT NOT NULL,
  rating INT CHECK (rating BETWEEN 1 AND 5),
  comment TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (product_id) REFERENCES products(productId) ON DELETE CASCADE,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- D·ªØ li·ªáu m·∫´u review
INSERT INTO reviews (product_id, user_id, rating, comment) VALUES
(1, 1, 5, 'T√°o r·∫•t gi√≤n v√† ng·ªçt, giao h√†ng nhanh!'),
(1, 2, 4, 'H√†ng t∆∞∆°i nh∆∞ng h∆°i √≠t n∆∞·ªõc.'),
(2, 1, 5, 'Cam M·ªπ th∆°m ngon, ƒë√°ng ti·ªÅn.'),
(3, 2, 3, 'Chu·ªëi ·ªïn, nh∆∞ng ch∆∞a ch√≠n k·ªπ.'),
(4, 1, 5, 'D∆∞a h·∫•u r·∫•t ngon v√† ng·ªçt.');

-- =========================
-- 6Ô∏è‚É£ VIEW: AVG RATING (tu·ª≥ ch·ªçn)
-- =========================

DROP VIEW IF EXISTS view_product_avg_rating;
CREATE VIEW view_product_avg_rating AS
SELECT 
  p.productId,
  p.name,
  ROUND(AVG(r.rating),1) AS avgRating,
  COUNT(r.id) AS totalReviews
FROM products p
LEFT JOIN reviews r ON p.productId = r.product_id
GROUP BY p.productId;

-- =========================
-- ‚úÖ TEST
-- =========================
-- Ki·ªÉm tra s·∫£n ph·∫©m + ƒëi·ªÉm trung b√¨nh:
-- SELECT * FROM view_product_avg_rating;
--
-- Ki·ªÉm tra review c·ªßa 1 s·∫£n ph·∫©m:
-- SELECT * FROM reviews WHERE product_id = 1;
--
-- Ki·ªÉm tra API:
--  GET  http://localhost:8080/ecommerce-hoa/api/products
--  GET  http://localhost:8080/ecommerce-hoa/api/reviews?productId=1
