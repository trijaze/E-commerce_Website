package vn.bachhoa.reviews;

import vn.bachhoa.common.Db;
import vn.bachhoa.common.Json;

import javax.servlet.http.*;
import javax.servlet.*;
import java.io.IOException;
import java.sql.*;
import java.util.*;

public class ReviewServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws IOException {
        String path = req.getPathInfo(); // /product/{id}
        if (path != null && path.startsWith("/product/")) {
            int productId = Integer.parseInt(path.split("/")[2]);
            List<Map<String, Object>> reviews = new ArrayList<>();
            double avg = 0;

            try (Connection conn = Db.get().getConnection()) {
                PreparedStatement ps = conn.prepareStatement(
                        "SELECT r.id, r.rating, r.comment, u.name AS username " +
                        "FROM reviews r JOIN users u ON r.user_id=u.id WHERE r.product_id=?");
                ps.setInt(1, productId);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    Map<String, Object> r = new HashMap<>();
                    r.put("id", rs.getInt("id"));
                    r.put("rating", rs.getInt("rating"));
                    r.put("comment", rs.getString("comment"));
                    r.put("username", rs.getString("username"));
                    reviews.add(r);
                }

                Statement st = conn.createStatement();
                ResultSet ra = st.executeQuery("SELECT AVG(rating) AS avg FROM reviews WHERE product_id=" + productId);
                if (ra.next()) avg = ra.getDouble("avg");

                Map<String, Object> result = Map.of("average", avg, "reviews", reviews);
                Json.write(resp, 200, Map.of("ok", true, "data", result));
            } catch (Exception e) {
                e.printStackTrace();
                Json.write(resp, 500, Map.of("ok", false, "error", e.getMessage()));
            }
        }
    }

    @Override
    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {
        try (Scanner sc = new Scanner(req.getInputStream()).useDelimiter("\\A")) {
            String body = sc.hasNext() ? sc.next() : "{}";
            var mapper = new com.fasterxml.jackson.databind.ObjectMapper();
            Map<String, Object> data = mapper.readValue(body, Map.class);

            HttpSession session = req.getSession(false);
            if (session == null || session.getAttribute("user") == null) {
                Json.write(resp, 401, Map.of("ok", false, "error", "Login required"));
                return;
            }

            Map<?, ?> user = (Map<?, ?>) session.getAttribute("user");
            int userId = ((Number) user.get("id")).intValue();

            try (Connection conn = Db.get().getConnection()) {
                PreparedStatement ps = conn.prepareStatement(
                        "INSERT INTO reviews (product_id, user_id, rating, comment) VALUES (?, ?, ?, ?)");
                ps.setInt(1, ((Number) data.get("productId")).intValue());
                ps.setInt(2, userId);
                ps.setInt(3, ((Number) data.get("rating")).intValue());
                ps.setString(4, (String) data.get("comment"));
                ps.executeUpdate();
                Json.write(resp, 201, Map.of("ok", true));
            }
        } catch (Exception e) {
            e.printStackTrace();
            Json.write(resp, 500, Map.of("ok", false, "error", e.getMessage()));
        }
    }
}
